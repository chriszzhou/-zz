#include<iostream>
#include"haxi.h"
int main() {
	test2();
	return 0;
}
//缺陷：除留余数法只适用于整型
//除留余数法最好模素数
//何时扩容：负载因子=元素个数/散列表长度   70%   如何扩容：尽量2倍方式（快速找到接近二倍的素数）
//能不能用vector方式扩容
//线性探测
//优点：简单
//缺点：空间利用率不高（70%）
//容易造成数据的堆积（发生冲突的元素容易连成一堆）  
//二次探测 H（i）=H0+i^2  或者H（i）=H0-i^2  缺点：找下一个空余位置可能需要很多次。【越界情况必须用%】（60%）